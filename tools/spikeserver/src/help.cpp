#include <stdio.h>
#include <stdlib.h>

#include "help.h"

void print_help(char filename[])
{
    fprintf (stderr, "%s - A Spike sender / receiver for the SpiNNaker board\n", filename);
    fprintf (stderr, "Syntax:\n\n%s -m ms_tick -s spinnaker_board_address [-v hostname:port]\n", filename);
    fprintf (stderr, "[-w hostname:port] [-f] [-a] [-t|-b] [-i filename] [-o filename [-r]] [-h]\n\n");
    fprintf (stderr, "-a\n");
    fprintf (stderr, "    wait for synchronization spike coming from the SpiNNaker board before\n");
    fprintf (stderr, "    starting to send spikes\n\n");
    fprintf (stderr, "-b\n");
    fprintf (stderr, "    Identifies binary input / output\n\n");
    fprintf (stderr, "-c core_number\n");
    fprintf (stderr, "    Identifies the core to which the SDP message is delivered\n");
    fprintf (stderr, "    must be between 1 and 17 - core 0 is intended to be the monitor\n\n");
    fprintf (stderr, "-f\n");
    fprintf (stderr, "    use old SPINNPACKET format to send spikes to visualizers\n");
    fprintf (stderr, "    default is the SDP packet format\n\n");
    fprintf (stderr, "-h\n");
    fprintf (stderr, "    Prints this help\n\n");
    fprintf (stderr, "-i filename\n");
    fprintf (stderr, "    Input file name - this file contains the spikes to\n");
    fprintf (stderr, "    be sent to the SpiNNaker board\n\n");
    fprintf (stderr, "-m ms_tick\n");
    fprintf (stderr, "    Time of a timer tick on the spinnaker board in millisecond\n");
    fprintf (stderr, "     (real time/simulated time)\n");
    fprintf (stderr, "    ms_tick = 1 means real time\n");
    fprintf (stderr, "    ms_tick = 10 means simulation time = 10 times slower than real time\n\n");
    fprintf (stderr, "-o filename\n");
    fprintf (stderr, "    Output file name - this file contains the spikes received\n");
    fprintf (stderr, "    from the SpiNNaker board\n\n");
    fprintf (stderr, "-p\n");
    fprintf (stderr, "    Identifies the SDP port to which the message is delivered\n");
    fprintf (stderr, "    must be between 1 and 7 as SDP allows only this range\n\n");
    fprintf (stderr, "-r\n");
    fprintf (stderr, "    replicate the spikes from the SpiNNaler board both on\n");
    fprintf (stderr, "    the output file and on the standard output\n\n");
    fprintf (stderr, "-s spinnaker_board_address\n");
    fprintf (stderr, "    address of the spinnaker board (or board name)\n\n");
    fprintf (stderr, "-t\n");
    fprintf (stderr, "    Identifies text input / output\n\n");
    fprintf (stderr, "-v hostname:port\n");
    fprintf (stderr, "    Identifies the host running the visualizer for the input spikes\n\n");
    fprintf (stderr, "-w hostname:port\n");
    fprintf (stderr, "    Identifies the host running the visualizer for the output spikes\n\n");
    fprintf (stderr, "-x\n");
    fprintf (stderr, "    Identifies the X coordinate of the chip to which the message is delivered\n");
    fprintf (stderr, "    must be between 0 and 255\n\n");
    fprintf (stderr, "-y\n");
    fprintf (stderr, "    Identifies the Y coordinate of the chip to which the message is delivered\n");
    fprintf (stderr, "    must be between 0 and 255\n\n\n");
    
    fprintf (stderr, "This software handles the spiking interface with the SpiNNaker board.\n");
    fprintf (stderr, "\"Input\" spikes are those sourced from the host and sent to the board.\n");
    fprintf (stderr, "\"Output\" spikes are those sourced from the board and sent to the host.\n\n");
    fprintf (stderr, "This server waits for an incoming syncronization packet generated by the\n");
    fprintf (stderr, "SpiNNaker board using a SDP packet with destination on port 3 on the host.\n\n");
    fprintf (stderr, "If no input / output files are specified, the server accepts data from the\n");
    fprintf (stderr, "standard input and writes the output on the standard output.\n\n");
    fprintf (stderr, "The input file in binary format is composed by a series of frame ending\n");
    fprintf (stderr, "with the value -1 (0xFFFFFFFF). The values in the frame are the neuron IDs\n");
    fprintf (stderr, "expressed as binary numbers that will be send as routing key in multicast\n");
    fprintf (stderr, "packet on the SpiNNaker system.\n\n");
    fprintf (stderr, "The input file in text format is composed by a series of frame ending\n");
    fprintf (stderr, "with the value -1 (0xFFFFFFFF). The values in the frame are the neuron IDs\n");
    fprintf (stderr, "expressed as text in hexadecimal format that will be send as routing key\n");
    fprintf (stderr, "in multicast packet on the SpiNNaker system.\n\n");
    fprintf (stderr, "The output generated is composed by two numbers of 32 bits: the first number\n");
    fprintf (stderr, "represents the time of the event, while the second number represents the ID\n");
    fprintf (stderr, "of the neuron that emitted a spike. The output generated follows the same\n");
    fprintf (stderr, "format (binary/text) of the input file.\n");
    exit(0);
}
